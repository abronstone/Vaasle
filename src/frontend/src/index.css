body {
  text-align: center;
  font-size: 1em;
  font-family: verdana;
  margin: 0;
}
h1 {
  font-size: 1.2em;
  padding: 20px 0;
  border-bottom: 1px solid #eee;
  margin: 0 0 30px 0;
  color: #333;
}

/* Login / logout buttons */
.auth0button {
  background-color: #253d5b;
  color: #f8f8ff;
  font-size: 16px;
  border: none;
  outline: none;
  box-shadow: none;
  padding: 10px 20px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  cursor: pointer;
  user-select: none;
}

.auth0button:active {
  background-color: #1c2f45;
}

.auth0button:hover {
  background-color: #2c4d70;
}

/* Classes for App.js that allow external user game representations
to be laid out around the current user's game */
/* index.css */
.App {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  grid-template-rows: auto 1fr auto;
  row-gap: 20px;    /* This sets the vertical gap */
  column-gap: 10px; /* This sets the horizontal gap */  
  justify-content: center;
  align-items: start;
}

.CurrentUserGame {
  grid-column: 2;
  grid-row: 2;
}

.wordle-container:nth-child(odd) {
  grid-column: 1;
  grid-row: 2;
}

.wordle-container:nth-child(even) {
  grid-column: 3;
  grid-row: 2;
}

.wordle-container:first-of-type {
  grid-column: 2;
  grid-row: 1;
}

.wordle-container:last-of-type {
  grid-column: 2;
  grid-row: 3;
}

/* Container for individual representations of games */
.wordle-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  flex: 1;
  width: 100%;
}

/* rows */
.row {
  text-align: center;
  display: flex;
  justify-content: center;
}
.row > div {
  display: block;
  width: 60px;
  height: 60px;
  border: 1px solid #bbb;
  margin: 4px;
  text-align: center;
  line-height: 60px;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 2.5em;
}
/* Row with smaller squares for showing an external user's progress
in multiplayer mode */
.external-user-row > div {
  width: 40px;
  height: 40px;
}
/* ! attaching animation: flip to all colored squares */
/* --x = variable in css */
/* any div color __ inside row */
.row > div.green {
  --background: #5ac85a;
  --border-color: #5ac85a;
  /* run flip animation for .5 s with smooth transitions, have it stay
    at final animation point  */
  animation: flip 0.5s ease forwards;
}
.row > div.grey {
  --background: #a1a1a1;
  --border-color: #a1a1a1;
  animation: flip 0.5s ease forwards;
}
.row > div.yellow {
  --background: #e2cc68;
  --border-color: #e2cc68;
  animation: flip 0.5s ease forwards;
}

/* Error badge */
.error-badge {
  color: #e74c3c;
  background-color: #f6d7d5;
  padding: 0.5em 1em;
  border-radius: 0.25em;
  display: inline-flex;
  align-items: center;
  gap: 0.5em;
  font-weight: bold;
  margin-top: 14px;
  margin-bottom: 14px;
}

/* animation delays for the 2-5 squares, this is hard coded for 5 lettes. */
.row > div:nth-child(2) {
  animation-delay: 0.25s;
}
.row > div:nth-child(3) {
  animation-delay: 0.5s;
}
.row > div:nth-child(4) {
  animation-delay: 0.75s;
}
.row > div:nth-child(5) {
  animation-delay: 1s;
}

/* in row.current look for div called filled */
.row.current > div.filled {
  animation: bounce 0.2s ease-in-out forwards;
}

.keypad {
  max-width: 500px;
  /* centralize width of 400px */
  margin: 20px auto;
}
/* styling each key, display in line block to line them up till 500px
  then line height to ensure text is in the middle of each key */
.keypad > div {
  margin: 5px;
  width: 40px;
  height: 50px;
  background: #eee;
  display: inline-block;
  border-radius: 6px;
  line-height: 50px;
}

.keypad > div.unused {
  background: #eee;
  color: #fff;
}
.keypad > div.green {
  background: #5ac85a;
  color: #fff;
  /* transition frrom very light grey to color takes 0.3 sec */
  transition: all 0.3s ease-in;
}
.keypad > div.yellow {
  background: #e2cc68;
  color: #fff;
  transition: all 0.3s ease-in;
}
.keypad > div.grey {
  background: #a1a1a1;
  color: #fff;
  transition: all 0.3s ease-in;
}
.modal {
  /* background accross entire screen */
  background: rgba(255, 255, 255, 0.7);
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
/* creating the box displaying final correct message */
.modal div {
  max-width: 480px;
  background: #fff;
  padding: 40px;
  border-radius: 10px;
  margin: 10% auto;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.3);
}
/* outputting the solution word */
.modal .solution {
  color: #ff004c;
  font-weight: bold;
  font-size: 0.8em;
  text-transform: uppercase;
  letter-spacing: 1px;
}
/* animations */

@keyframes flip {
  0% {
    /* dont rotate the x axis at all, dont animate the color*/
    transform: rotateX(0);
    background: white;
    border-color: #333;
  }
  45% {
    transform: rotateX(90deg);
    background: white;
    border-color: #333;
  }
  55% {
    /* animate the color for the correct square */
    transform: rotateX(90deg);
    /* colors get switched to corresponding color of the square */
    background: var(--background);
    border-color: var(--border-color);
    color: white;
  }
  100% {
    transform: rotateX(0);
    background: var(--background);
    border-color: var(--border-color);
    color: white;
  }
}
@keyframes bounce {
  0% {
    /* dont change the size of the square */
    transform: scale(1);
    border-color: #ddd;
  }
  50% {
    /* take the size of the square * 1.2 */
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
    border-color: #333;
  }
}

.auth0button {
  margin-top: 14px;
  margin-bottom: 14px;
}
